- id: '1609006720161'
  alias: MimieTracker  - onHouseOpening
  description: ''
  trigger:
  - platform: state
    entity_id: group.openings
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.where_is_mimie
        state: inside
      sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.where_is_mimie
          option: was_inside
    - conditions:
      - condition: state
        entity_id: input_select.where_is_mimie
        state: outside
      sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.where_is_mimie
          option: was_outside
    default: []
  mode: single
- id: '1609007466359'
  alias: MimieTracker  - onMotionInside
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_home
    to: 'on'
  condition:
  - condition: state
    entity_id: group.presence
    state: not_home
  - condition: state
    entity_id: group.openings
    state: 'off'
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.where_is_mimie
      option: inside
  mode: single
- id: '1609007781545'
  alias: MimieTracker  - onFlapOpen
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.opening_catflap
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.where_is_mimie
        state: inside
      sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.where_is_mimie
          option: outside
    - conditions:
      - condition: state
        entity_id: input_select.where_is_mimie
        state: outside
      sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.where_is_mimie
          option: inside
    default: []
  - delay: 00:00:30
  mode: single
- id: '1609606304717'
  alias: CatTracker  - onFlapOpen
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.opening_catflap
    from: 'off'
    to: 'on'
    for: 0:00:02
  condition: []
  action:
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.opening_catflap_out
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: binary_sensor.opening_catflap
      from: 'off'
      to: 'on'
    timeout: 00:00:30
    continue_on_timeout: true
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.entity_id == ''binary_sensor.opening_catflap_out''
          }}'
      sequence:
      - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.opening_catflap
          from: 'on'
          to: 'off'
          for: 0:00:05
        continue_on_timeout: false
        timeout: 00:02:00
      - service: input_select.select_option
        data:
          option: outside
        entity_id: input_select.where_is_mimie
      - service: input_select.select_option
        data:
          option: exiting
        entity_id: input_select.catflap
      - delay: 00:00:01
      - service: input_select.select_option
        data:
          option: idle
        entity_id: input_select.catflap
    default:
    - wait_for_trigger:
      - platform: state
        entity_id: binary_sensor.opening_catflap
        from: 'on'
        to: 'off'
        for: 0:00:10
      continue_on_timeout: true
      timeout: 00:00:20
    - service: input_select.select_option
      data:
        option: inside
      entity_id: input_select.where_is_mimie
    - service: input_select.select_option
      data:
        option: entering
      entity_id: input_select.catflap
    - delay: 00:00:01
    - service: input_select.select_option
      data:
        option: idle
      entity_id: input_select.catflap
  mode: restart
- id: '1621248504881'
  alias: Notify Lou
  description: ''
  trigger:
  - platform: state
    entity_id: person.lou
    to: home
    for: 00:05:00
  condition: []
  action:
  - service: tts.google_translate_say
    data:
      entity_id: media_player.living_room_speaker
      message: Coucou ma puce, tu penses a aller ramasser les Fraises STP
      language: fr
  mode: single
