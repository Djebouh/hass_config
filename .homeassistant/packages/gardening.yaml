################################################################
## Define all sensors and plants
##
################################################################

# 4BC9 Tomates 3 mur
# 6DFB Pepper 1
# 4CC3 Basil 4
# 6EC8 Arugula1
# 3CB6 Basil 3
# 4835 Basil 1

# C187 Avocado
# C5C6 Mimosa
# 720A verveine

# binary_sensor:
#   - platform: mqtt
#     name: "ESP 128:125:58:186:54:236"
#     state_topic: "ESP/128:125:58:186:54:236/state"
#     json_attributes_topic: "ESP/128:125:58:186:54:236/result"
#   - platform: mqtt
#     name: "ESP 128:125:58:184:153:204"
#     state_topic: "ESP/128:125:58:184:153:204/state"
#     json_attributes_topic: "ESP/128:125:58:184:153:204/result"


# plant:
#   - platform: plant_from_prefix
#     prefix: miflora_3cb6
#   - platform: plant_from_prefix
#     prefix: miflora_41fa


# parrot_pot:
#   - mac: 'A0:14:3D:CD:A2:93'
#   - mac: 'A0:14:3D:CD:28:72'
#   - mac: 'A0:14:3D:CD:C5:C6'
#   - mac: 'A0:14:3D:CD:72:0A'
#   - mac: 'A0:14:3D:CD:7C:46'
#   - mac: 'A0:14:3D:CD:0E:F7'
#   - mac: 'A0:14:3D:CD:1F:11'
#   - mac: 'A0:14:3D:CD:C1:87'
#   # - mac: 'A0:14:3D:CD:C2:84'
#   # - mac: 'A0:14:3D:CD:B4:B6'

# mi_flora:
#   - mac: 'C4:7C:8D:6A:6D:FB'
#   - mac: 'C4:7C:8D:6A:3C:B6'
#   - mac: 'C4:7C:8D:6A:6E:C8'
#   - mac: 'C4:7C:8D:6A:4C:C3'
#   - mac: 'C4:7C:8D:6A:48:35'
#   - mac: 'C4:7C:8D:6A:4B:C9'


mqtt_plant:
  # - type: 'Parrot_POT'
  #   mac: 'A0:14:3D:CD:C2:84'


automation:
  - alias: 'Plant - Detect MQTT devices'
    trigger:
      platform: mqtt
      topic: plant_scanner/#
    action:
      - service: mqtt_plant.add_plant
        data_template:
          type: "{{ trigger.payload.split('/')[0] }}"
          mac: "{{ trigger.payload.split('/')[1] }}"
  - alias: 'Plant - monitor ESP'
    trigger:
      platform: mqtt
      topic: ESP/#
    action:
      - service: mqtt.publish
        data_template:
          topic: "homeassistant/binary_sensor/ESP_{{ trigger.topic.split('/')[1] |replace(':','_') }}/config"
          retain: false
          payload: >-
            {
              "name": "ESP {{ trigger.topic.split('/')[1] }} activity",
              "state_topic": "ESP/{{ trigger.topic.split('/')[1] }}/state",
              "device_class": "connectivity"
            }



# sensor:
#   - platform: miflora
#     mac: 'C4:7C:8D:6A:3C:B6'
#     name: MiFlora 3CB6
#   - platform: miflora
#     mac: 'C4:7C:8D:6A:41:FA'
#     name: MiFlora 41FA

# automation:
#   ############################################################
#   # Flora devices
#   ############################################################

#   - alias: 'Flora - Detect device'
#     initial_state: 'on'
#     trigger:
#       platform: mqtt
#       topic: MiFlora/+/moisture
#     action:
#       - service: mqtt.publish
#         data_template:
#           topic: "homeassistant/sensor/MiFlora_{{ trigger.topic.split('/')[1] |replace(':','_') }}_moisture/config"
#           retain: false
#           payload: >-
#             {
#               "name": "MiFlora@{{ trigger.topic.split('/')[1] }} moisture",
#               "state_topic": "MiFlora/{{ trigger.topic.split('/')[1] }}/moisture",
#               "unit_of_measurement": "%",
#               "device_class": "humidity",
#               "force_update": "true"
#             }
#       - service: mqtt.publish
#         data_template:
#           topic: "homeassistant/sensor/MiFlora_{{ trigger.topic.split('/')[1] |replace(':','_') }}_temperature/config"
#           retain: false
#           payload: >-
#             {
#               "name": "MiFlora@{{ trigger.topic.split('/')[1] }} temperature",
#               "state_topic": "MiFlora/{{ trigger.topic.split('/')[1] }}/temperature",
#               "unit_of_measurement": "°C",
#               "device_class": "temperature",
#               "force_update": "true"
#             }
#       - service: mqtt.publish
#         data_template:
#           topic: "homeassistant/sensor/MiFlora_{{ trigger.topic.split('/')[1] |replace(':','_') }}_light/config"
#           retain: false
#           payload: >-
#             {
#               "name": "MiFlora@{{ trigger.topic.split('/')[1] }} light",
#               "state_topic": "MiFlora/{{ trigger.topic.split('/')[1] }}/light",
#               "unit_of_measurement": "lx",
#               "device_class": "illuminance",
#               "force_update": "true"
#             }
#       - service: mqtt.publish
#         data_template:
#           topic: "homeassistant/sensor/MiFlora_{{ trigger.topic.split('/')[1] |replace(':','_') }}_conductivity/config"
#           retain: false
#           payload: >-
#             {
#               "name": "MiFlora@{{ trigger.topic.split('/')[1] }} conductivity",
#               "state_topic": "MiFlora/{{ trigger.topic.split('/')[1] }}/conductivity",
#               "unit_of_measurement": "µS/cm",
#               "icon": "mdi:flash-circle",
#               "force_update": "true"
#             }
#       - service: mqtt.publish
#         data_template:
#           topic: "homeassistant/sensor/MiFlora_{{ trigger.topic.split('/')[1] |replace(':','_') }}_battery/config"
#           retain: false
#           payload: >-
#             {
#               "name": "MiFlora@{{ trigger.topic.split('/')[1] }} battery",
#               "state_topic": "MiFlora/{{ trigger.topic.split('/')[1] }}/battery",
#               "unit_of_measurement": "%",
#               "device_class": "battery",
#               "force_update": "true"
#             }
