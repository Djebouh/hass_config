################################################################
## Automate light from motion detection
## Define smart/remote switches to control lights
## Handle "movie mode"
################################################################


homeassistant:
  customize:
    switch.autoliving_blocker:
      icon: mdi:sleep
    input_boolean.block_autolight_living:
      icon: mdi:sleep

yeelight:
  devices:
    yeelink-light-color1_miio54993037:
      name: bedroom_light
      use_music_mode: false
      model: color1
    yeelink-light-ceiling10_mibtEB71:
      name: pendantEntry_light
      use_music_mode: false
      model: ceiling4
    yeelink-light-ceiling10_mibt7C35:
      name: pendantWindow_light
      use_music_mode: false
      model: ceiling4

light:
  - platform: switch
    name: light@Garage
    entity_id: switch.wallswitch_light_garage
  - platform: switch
    name: light@Laundry
    entity_id: switch.wallswitch_light_laundry
  - platform: switch
    name: light@Kitchen
    entity_id: switch.wallswitch_light_kitchen
  - platform: switch
    name: light@Living
    entity_id: switch.wallswitch_light_living
  - platform: switch
    name: light@Bar
    entity_id: switch.wallswitch_light_bar
  - platform: switch
    name: light@Stairs
    entity_id: switch.wallswitch_light_stairs
  - platform: switch
    name: light@Lou_Ceiling
    entity_id: switch.wallswitch_light_lou_ceiling
  - platform: switch
    name: light@Lou_Desk
    entity_id: switch.wallswitch_light_lou_wall


  - platform: template
    lights:
      light_bedroom:
        friendly_name: "light@Bedroom"
        entity_id: light.bedroom_light
        value_template: "{{ is_state('light.bedroom_light', 'on') }}"
        level_template: "{{ state_attr('light.bedroom_light', 'brightness') | int }}"
        turn_on:
          service: light.turn_on
          entity_id: light.bedroom_light
          data_template:
            brightness: "{{ 255 if (now().hour >= 8) and (now().hour < 21) else 3 }}"
            kelvin: "{{ 4000 if (now().hour >= 8) and (now().hour < 21) else 2700 }}"
        turn_off:
          service: light.turn_off
          entity_id: light.bedroom_light
        set_level:
          service: light.turn_on
          entity_id: light.bedroom_light
          data_template:
            brightness: "{{ brightness }}"
            kelvin: "{{ (2700 + 1300 / 254 * (brightness - 1)) | int }}"
      
      scene_movie:
        friendly_name: "movie lighting"
        # entity_id:
        #   - light.pendantentry_light
        #   - light.pendantwindow_light
        #   - light.light_living
        #   - light.light_kitchen
        #   - light.light_bar
        value_template: >-
          {{ is_state('light.pendantentry_light', 'off') and is_state('light.pendantwindow_light', 'off') and
            is_state('light.light_living', 'off') and is_state('light.light_kitchen', 'off') and
            is_state('light.light_bar', 'on') and
            is_state('light.pendantentry_light_ambilight', 'on') and
            (states.light.pendantentry_light_ambilight.attributes.hs_color[0] | round == 240) and
            is_state('light.pendantwindow_light_ambilight', 'on') and
            (states.light.pendantwindow_light_ambilight.attributes.hs_color[0] | round == 240) }}
        level_template: "{{ state_attr('light.pendantwindow_light_ambilight', 'brightness') | int if is_state('light.pendantwindow_light_ambilight', 'on') else 0 }}"
        color_template: "{{ state_attr('light.pendantwindow_light_ambilight', 'hs_color') if is_state('light.pendantwindow_light_ambilight', 'on') else '240, 78'}}"
        temperature_template: "{{ state_attr('light.pendantwindow_light_ambilight', 'color_temp') | int if is_state('light.pendantwindow_light_ambilight', 'on') else 285 }}"
        icon_template: mdi:filmstrip
        turn_on:
          - service: script.light_set_livingroom_ambiance
            data_template:
              hue: 240
              saturation: 78
        turn_off:
          - service: script.turn_off
            data: 
              entity_id: script.light_set_livingroom_ambiance
          - service: scene.turn_on
            entity_id: scene.bar_bright
      
      scene_cosy:
        friendly_name: "cosy lighting"
        # entity_id:
        #   - light.pendantentry_light
        #   - light.pendantwindow_light
        #   - light.light_living
        #   - light.light_kitchen
        #   - light.light_bar
        value_template: >-
          {{ is_state('light.pendantentry_light', 'off') and is_state('light.pendantwindow_light', 'off') and
            is_state('light.light_living', 'off') and is_state('light.light_kitchen', 'off') and
            is_state('light.light_bar', 'on') and
            is_state('light.pendantentry_light_ambilight', 'on') and
            (states.light.pendantentry_light_ambilight.attributes.hs_color[0] | round == 13) and
            is_state('light.pendantwindow_light_ambilight', 'on') and
            (states.light.pendantwindow_light_ambilight.attributes.hs_color[0] | round == 13) }}
        level_template: "{{ state_attr('light.pendantwindow_light_ambilight', 'brightness') | int if is_state('light.pendantwindow_light_ambilight', 'on') else 0 }}"
        color_template: "{{ state_attr('light.pendantwindow_light_ambilight', 'hs_color') if is_state('light.pendantwindow_light_ambilight', 'on') else '13, 100'}}"
        temperature_template: "{{ state_attr('light.pendantwindow_light_ambilight', 'color_temp') | int if is_state('light.pendantwindow_light_ambilight', 'on') else 285 }}"
        icon_template: mdi:sofa
        turn_on:
          - service: script.light_set_livingroom_ambiance
            data_template:
              hue: 13
              saturation: 100
        turn_off:
          - service: script.turn_off
            data: 
              entity_id: script.light_set_livingroom_ambiance
          - service: scene.turn_on
            entity_id: scene.bar_bright

  - platform: group
    name: lights_downstairs
    entities:
      - light.light_bar
      - light.light_kitchen
      - light.light_living


  - platform: group
    name: lights_all
    entities:
      - light.light_bar
      - light.light_kitchen
      - light.light_living
      - light.gateway_light
      - light.light_garage
      - light.light_laundry
      - light.light_stairs
      - light.light_bedroom
      - light.light_lou_bed
      - light.light_lou_ceiling


  - platform: mqtt
    name: "lights@Trees"
    state_topic: "shellies/shellyswitch25-E631D5/relay/1"
    command_topic: "shellies/shellyswitch25-E631D5/relay/1/command"
    qos: 0
    payload_on: "on"
    payload_off: "off"
    optimistic: false
    retain: false


  - platform: mqtt
    name: "light@Pool"
    state_topic: "shellies/shellyswitch25-E631D5/relay/0"
    command_topic: "shellies/shellyswitch25-E631D5/relay/0/command"
    qos: 0
    payload_on: "on"
    payload_off: "off"
    optimistic: false
    retain: false


  - platform: mqtt
    name: "light@Porch"
    state_topic: "shellies/shelly1-24CE1A/relay/0"
    command_topic: "shellies/shelly1-24CE1A/relay/0/command"
    qos: 0
    payload_on: "on"
    payload_off: "off"
    optimistic: false
    retain: false


input_boolean:
  block_autolight_living:
    name: Block autolight in Living Room
    initial: 'off'


switch:
  - platform: template
    switches:
      autoliving_blocker:
        friendly_name: "Block auto@living"
        value_template: "{{ is_state('input_boolean.block_autolight_living', 'on') }}"
        entity_id: input_boolean.block_autolight_living
        turn_on:
        - service: light.turn_off
          entity_id: light.lights_downstairs
        - service: input_boolean.turn_on
          data:
            entity_id: input_boolean.block_autolight_living
        turn_off:
        - service: input_boolean.turn_off
          data:
            entity_id: input_boolean.block_autolight_living

      # movie_mode:
      #   friendly_name: "Movie Mode"
      #   value_template: >-
      #     {{ is_state('light.pendantentry_light', 'off') and is_state('light.pendantwindow_light', 'off') and
      #       is_state('light.light_living', 'off') and is_state('light.light_kitchen', 'off') and
      #       is_state('light.light_bar', 'on') and
      #       is_state('light.pendantentry_light_ambilight', 'on') and
      #       (states.light.pendantentry_light_ambilight.attributes.hs_color[0] == 240) and
      #       is_state('light.pendantwindow_light_ambilight', 'on') and
      #       (states.light.pendantwindow_light_ambilight.attributes.hs_color[0] == 240) }}
      #   turn_on:
      #     service: script.turn_on_movie_scene
      #   turn_off:
      #     - service: script.turn_off
      #       data: 
      #         entity_id: script.turn_on_movie_scene
      #     - service: scene.turn_on
      #       entity_id: scene.bar_bright

      # cosy_mode:
      #   friendly_name: "Cosy Mode"
      #   value_template: >-
      #     {{ is_state('light.pendantentry_light', 'off') and is_state('light.pendantwindow_light', 'off') and
      #       is_state('light.light_living', 'off') and is_state('light.light_kitchen', 'off') and
      #       is_state('light.light_bar', 'on') and
      #       is_state('light.pendantentry_light_ambilight', 'on') and
      #       (states.light.pendantentry_light_ambilight.attributes.hs_color[0] | round == 13) and
      #       is_state('light.pendantwindow_light_ambilight', 'on') and
      #       (states.light.pendantwindow_light_ambilight.attributes.hs_color[0] | round == 13) }}
      #   turn_on:
      #     service: script.turn_on_cosy_scene
      #   turn_off:
      #     - service: script.turn_off
      #       data: 
      #         entity_id: script.turn_on_cosy_scene
      #     - service: scene.turn_on
      #       entity_id: scene.bar_bright

scene:
  # - name: living Movie
  #   entities:
  #     light.light_bar: on
  #     light.light_living: off
  #     light.light_kitchen: off
  #     light.pendantentry_light: off
  #     light.pendantwindow_light: off
  #     light.pendantentry_light_ambilight:
  #       state: on
  #       hs_color: [240, 78]
  #       brightness: 255
  #     light.pendantwindow_light_ambilight:
  #       state: on
  #       hs_color: [240, 78]
  #       brightness: 255


  # - name: living cosy
  #   entities:
  #     light.light_bar: on
  #     light.light_living: off
  #     light.light_kitchen: off
  #     light.pendantentry_light: off
  #     light.pendantwindow_light: off
  #     light.pendantentry_light_ambilight:
  #       state: on
  #       hs_color: [13, 100]
  #       brightness: 255
  #     light.pendantwindow_light_ambilight:
  #       state: on
  #       hs_color: [13, 100]
  #       brightness: 255


  - name: Kitchen and Bar
    entities:
      light.light_kitchen: on
      light.light_bar: on
      light.pendantentry_light:
        state: on
        brightness: 255
        # kelvin: 5500
        rgb_color: [255,236,224]
      light.pendantentry_light_ambilight:
        state: on
        hs_color: [13, 100]
        brightness: 255
      light.pendantwindow_light:
        state: on
        brightness: 255
        # kelvin: 5500
        rgb_color: [255,236,224]
      light.pendantwindow_light_ambilight:
        state: on
        hs_color: [13, 100]
        brightness: 255

  - name: bar Bright
    entities:
      light.light_bar: on
      light.pendantentry_light:
        state: on
        brightness: 255
        # kelvin: 5500
        rgb_color: [255,236,224]
      light.pendantentry_light_ambilight:
        state: on
        hs_color: [13, 100]
        brightness: 255
      light.pendantwindow_light:
        state: on
        brightness: 255
        # kelvin: 5500
        rgb_color: [255,236,224]
      light.pendantwindow_light_ambilight:
        state: on
        hs_color: [13, 100]
        brightness: 255

script:

  'light_swap_bedroom_lighting':
    alias: swap bedroom lighting
    sequence:
    - service: light.turn_on
      entity_id: light.bedroom_light
      data_template:
        brightness: "{{ 3 if (state_attr('light.bedroom_light', 'brightness') is none) or (state_attr('light.bedroom_light', 'brightness') > 10) else 255 }}"
        kelvin: "{{ 2700 if (state_attr('light.bedroom_light', 'brightness') is none) or (state_attr('light.bedroom_light', 'brightness') > 10) else 4000 }}"

  'light_turn_bar_to_ambilight':
    alias: Turn lights@bar to ambilight
    description: 'Turn off the pendant lights of the bar and set the ambilight to the specified ambiance'
    fields:
      hue:
        description: "The hue of the targeted ambiance"
        example: 13
      saturation:
        description: "The saturation of the targeted ambiance"
        example: 100
    sequence:
      - service: light.turn_off
        entity_id:
          - light.pendantentry_light
          - light.pendantwindow_light
      - service: light.turn_on
        entity_id:
          - light.pendantwindow_light_ambilight
          - light.pendantentry_light_ambilight
        data_template:
          brightness: 255
          hs_color:
            - "{{ hue }}"
            - "{{ saturation }}"

  'light_set_livingroom_ambiance':
    alias: Set the ambiance of the living room
    description: 'Turn off all lights of the living room but the ambilight of the pendant. The ambilight are set to the specified ambiance'
    fields:
      hue:
        description: "The hue of the targeted ambiance"
        example: 13
      saturation:
        description: "The saturation of the targeted ambiance"
        example: 100
    sequence:
      - service: light.turn_on
        entity_id: light.light_bar
      - service: light.turn_off
        entity_id:
          - light.light_kitchen
          - light.light_living
      - service: script.light_turn_bar_to_ambilight
        data_template:
          hue: "{{ hue }}"
          saturation: "{{ saturation }}"
      - delay:
          seconds: 2
      - service: script.light_turn_bar_to_ambilight
        data_template:
          hue: "{{ hue }}"
          saturation: "{{ saturation }}"
      - service: homeassistant.update_entity
        entity_id:
          - light.pendantentry_light
          - light.pendantwindow_light
          - light.pendantwindow_light_ambilight
          - light.pendantentry_light_ambilight
      - condition: template
        value_template: >-
          {{ not (is_state('light.pendantentry_light', 'off') and is_state('light.pendantwindow_light', 'off') and
            is_state('light.pendantentry_light_ambilight', 'on') and
            (states.light.pendantentry_light_ambilight.attributes.hs_color[0] | round == hue) and
            is_state('light.pendantwindow_light_ambilight', 'on') and
            (states.light.pendantwindow_light_ambilight.attributes.hs_color[0] | round == hue)) }}
      - delay:
          seconds: 18
      - service: script.light_turn_bar_to_ambilight
        data_template:
          hue: "{{ hue }}"
          saturation: "{{ saturation }}"
      - service: homeassistant.update_entity
        entity_id:
          - light.pendantentry_light
          - light.pendantwindow_light
          - light.pendantwindow_light_ambilight
          - light.pendantentry_light_ambilight
      - condition: template
        value_template: >-
          {{ not (is_state('light.pendantentry_light', 'off') and is_state('light.pendantwindow_light', 'off') and
            is_state('light.pendantentry_light_ambilight', 'on') and
            (states.light.pendantentry_light_ambilight.attributes.hs_color[0] | round == hue) and
            is_state('light.pendantwindow_light_ambilight', 'on') and
            (states.light.pendantwindow_light_ambilight.attributes.hs_color[0] | round == hue)) }}
      - delay:
          seconds: 5
      - service: script.light_turn_bar_to_ambilight
        data_template:
          hue: "{{ hue }}"
          saturation: "{{ saturation }}"
      - service: homeassistant.update_entity
        entity_id:
          - light.pendantentry_light
          - light.pendantwindow_light
          - light.pendantwindow_light_ambilight
          - light.pendantentry_light_ambilight
      - condition: template
        value_template: >-
          {{ not (is_state('light.pendantentry_light', 'off') and is_state('light.pendantwindow_light', 'off') and
            is_state('light.pendantentry_light_ambilight', 'on') and
            (states.light.pendantentry_light_ambilight.attributes.hs_color[0] | round == hue) and
            is_state('light.pendantwindow_light_ambilight', 'on') and
            (states.light.pendantwindow_light_ambilight.attributes.hs_color[0] | round == hue)) }}
      - delay:
          seconds: 5
      - service: script.light_turn_bar_to_ambilight
        data_template:
          hue: "{{ hue }}"
          saturation: "{{ saturation }}"


  # 'turn_on_movie_scene':
  #   alias: Switch to Movie Mode
  #   sequence:
  #   - service: scene.turn_on
  #     entity_id: scene.living_movie
  #   - delay:
  #       seconds: 2
  #   - service: scene.turn_on
  #     entity_id: scene.living_movie
  #   - delay:
  #       seconds: 5
  #   - condition: state
  #     state: 'off'
  #     entity_id: light.scene_movie
  #   - service: scene.turn_on
  #     entity_id: scene.living_movie
  #   - delay:
  #       seconds: 5
  #   - condition: state
  #     state: 'off'
  #     entity_id: light.scene_movie
  #   - service: scene.turn_on
  #     entity_id: scene.living_movie
  #   - delay:
  #       seconds: 5
  #   - condition: state
  #     state: 'off'
  #     entity_id: light.scene_movie
  #   - service: scene.turn_on
  #     entity_id: scene.living_movie
  #   - delay:
  #       seconds: 5
  #   - condition: state
  #     state: 'off'
  #     entity_id: light.scene_movie
  #   - service: scene.turn_on
  #     entity_id: scene.living_movie
  #   - delay:
  #       seconds: 5
  #   - condition: state
  #     state: 'off'
  #     entity_id: light.scene_movie
  #   - service: scene.turn_on
  #     entity_id: scene.living_movie
  #   - delay:
  #       seconds: 5
  #   - condition: state
  #     state: 'off'
  #     entity_id: light.scene_movie
  #   - service: scene.turn_on
  #     entity_id: scene.living_movie
  #   - delay:
  #       seconds: 5
  #   - condition: state
  #     state: 'off'
  #     entity_id: light.scene_movie
  #   - service: scene.turn_on
  #     entity_id: scene.living_movie

  # 'turn_on_cosy_scene':
  #   alias: Switch to cosy Mode
  #   sequence:
  #   - service: scene.turn_on
  #     entity_id: scene.living_cosy
  #   - delay:
  #       seconds: 2
  #   - service: scene.turn_on
  #     entity_id: scene.living_cosy
  #   - delay:
  #       seconds: 5
  #   - condition: state
  #     state: 'off'
  #     entity_id: light.scene_cosy
  #   - service: scene.turn_on
  #     entity_id: scene.living_cosy
  #   - delay:
  #       seconds: 5
  #   - condition: state
  #     state: 'off'
  #     entity_id: light.scene_cosy
  #   - service: scene.turn_on
  #     entity_id: scene.living_cosy
  #   - delay:
  #       seconds: 5
  #   - condition: state
  #     state: 'off'
  #     entity_id: light.scene_cosy
  #   - service: scene.turn_on
  #     entity_id: scene.living_cosy
  #   - delay:
  #       seconds: 5
  #   - condition: state
  #     state: 'off'
  #     entity_id: light.scene_cosy
  #   - service: scene.turn_on
  #     entity_id: scene.living_cosy
  #   - delay:
  #       seconds: 5
  #   - condition: state
  #     state: 'off'
  #     entity_id: light.scene_cosy
  #   - service: scene.turn_on
  #     entity_id: scene.living_cosy
  #   - delay:
  #       seconds: 5
  #   - condition: state
  #     state: 'off'
  #     entity_id: light.scene_cosy
  #   - service: scene.turn_on
  #     entity_id: scene.living_cosy
  #   - delay:
  #       seconds: 5
  #   - condition: state
  #     state: 'off'
  #     entity_id: light.scene_cosy
  #   - service: scene.turn_on
  #     entity_id: scene.living_cosy

automation:

  ############################################################
  # Bed Room switch configuration
  ############################################################
  - alias: Switch Bedroom 1 - Switch on bedroom light
    initial_state: 'on'
    trigger:
    - platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_bedroom
        click_type: single
    - platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_bedroom2
        click_type: single
    condition:
      - condition: state
        entity_id: light.bedroom_light
        state: 'off'
    action:
      service: light.turn_on
      entity_id: light.light_bedroom


  - alias: Switch Bedroom 1 - Switch off bedroom light
    initial_state: 'on'
    trigger:
    - platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_bedroom
        click_type: single
    - platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_bedroom2
        click_type: single
    condition:
      condition: state
      entity_id: light.bedroom_light
      state: 'on'
    action:
      service: light.turn_off
      entity_id: light.light_bedroom

  - alias: Switch Bedroom 2 - Change bedroom lightling
    initial_state: 'on'
    trigger:
    - platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_bedroom
        click_type: double
    - platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_bedroom2
        click_type: double
    action:
      service: script.light_swap_bedroom_lighting

  - alias: Switch Bedroom L - Toggle stairs
    initial_state: 'on'
    trigger:
    - platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_bedroom
        click_type: long_click_press
    - platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_bedroom2
        click_type: long_click_press
    action:
      service: light.toggle
      entity_id: light.light_stairs

  ############################################################
  # Lou's Bedroom light configuration
  ############################################################
  - alias: Switch Lou 1 - Turn ceiling light ON
    initial_state: 'on'
    trigger:
      platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_lou
        click_type: single
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: light.light_lou_desk
        state: 'off'
      - condition: state
        entity_id: light.light_lou_ceiling
        state: 'off'
    action:
    - service: light.turn_on
      entity_id: light.light_lou_ceiling

  - alias: Switch Lou 1 - Turn light OFF
    initial_state: 'on'
    trigger:
      platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_lou
        click_type: single
    condition:
      condition: or
      conditions:
      - condition: state
        entity_id: light.light_lou_desk
        state: 'on'
      - condition: state
        entity_id: light.light_lou_ceiling
        state: 'on'
    action:
    - service: light.turn_off
      entity_id:
        - light.light_lou_desk
        - light.light_lou_ceiling

  - alias: Switch Lou 2 - Turn Desk light ON
    initial_state: 'on'
    trigger:
      platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_lou
        click_type: double
    condition:
      - condition: state
        entity_id: light.light_lou_desk
        state: 'off'
    action:
    - service: light.turn_on
      entity_id: light.light_lou_desk
    - service: light.turn_off
      entity_id: light.light_lou_ceiling

  - alias: Switch Lou 2 - Turn Desk light OFF and Turn ceiling light ON
    initial_state: 'on'
    trigger:
      platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_lou
        click_type: double
    condition:
      - condition: state
        entity_id: light.light_lou_desk
        state: 'on'
    action:
    - service: light.turn_on
      entity_id: light.light_lou_ceiling
    - service: light.turn_off
      entity_id: light.light_lou_desk

  - alias: Switch Lou L - Toggle stairs
    initial_state: 'on'
    trigger:
    - platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_lou
        click_type: long_click_press
    action:
      service: light.toggle
      entity_id: light.light_stairs


  ############################################################
  # Upstairs switch configuration
  ############################################################
  - alias: Toggle stairs light on single press upstairs
    initial_state: 'on'
    trigger:
      platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.wallswitch_light_stairs
        click_type: single
    action:
      service: light.toggle
      entity_id: light.light_stairs


  ############################################################
  # Stairs mini-switch configuration
  ############################################################
  - alias: Switch Stairs 1 - Toggle Stairs light
    initial_state: 'on'
    trigger:
      platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_stairs
        click_type: single
    action:
      service: light.toggle
      entity_id: light.light_stairs


  - alias: Switch Stairs 2 - Switch on stairs and turn off downstairs
    initial_state: 'on'
    trigger:
      platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_stairs
        click_type: double
    condition:
      condition: or
      conditions:
      - condition: state
        entity_id: light.lights_downstairs
        state: 'on'
      - condition: state
        entity_id: light.light_stairs
        state: 'off'
    action:
      - service: light.turn_on
        entity_id: light.light_stairs
      - entity_id: automation.autolight_stairs_stop
        service: automation.turn_on
      - delay:
          seconds: 2
      - service: light.turn_off
        entity_id: light.lights_downstairs


  - alias: Switch Stairs 2 - Switch off stairs and turn on bar
    initial_state: 'on'
    trigger:
      platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_light_stairs
        click_type: double
    condition:
      - condition: state
        entity_id: light.lights_downstairs
        state: 'off'
      - condition: state
        entity_id: light.light_stairs
        state: 'on'
    action:
      - service: light.turn_on
        entity_id: light.light_bar
      - delay:
          seconds: 2
      - service: light.turn_off
        entity_id: light.light_stairs


  ############################################################
  # Peer laundry and garage lighting
  ############################################################
  - alias: On Garage switched off, turn off Laundry light
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: light.light_garage
      to: 'off'
    condition:
      - condition: state
        entity_id: light.light_laundry
        state: 'on'
      # don't switch off if stopping garage light because no motion in garage while there is motion in laundry
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.motion_garage
          state: 'on'
        - condition: state
          entity_id: binary_sensor.motion_laundry
          state: 'off'
    action:
      service: light.turn_off
      entity_id: light.light_laundry


  - alias: On Laundry switched on, turn on Garage light
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: light.light_laundry
      to: 'on'
    condition:
      - condition: state
        entity_id: light.light_garage
        state: 'off'
    action:
      service: light.turn_on
      entity_id: light.light_garage


  ############################################################
  # Motion detection in living, low light at night
  ############################################################
  - alias: Autolight - Gateway
    initial_state: 'off'
    trigger:
      - platform: event
        event_type: xiaomi_aqara.motion
        event_data:
          entity_id: binary_sensor.motion_bar
      - platform: event
        event_type: xiaomi_aqara.motion
        event_data:
          entity_id: binary_sensor.motion_living
      - platform: state
        entity_id: sensor.door_front
        to: 'open'
      - platform: state
        entity_id: sensor.door_front
        to: 'unlocked'
    condition:
      - condition: state
        entity_id: light.lights_downstairs
        state: 'off'
    action:
      - service: light.turn_on
        entity_id: light.gateway_light
        data:
          brightness: 255
          rgb_color: [255, 181, 0]
      - service: automation.turn_on
        entity_id: automation.autolight_gateway_stop
      

  - alias: Autolight - Gateway Stop
    # initial_state: 'off'
    trigger:
      - platform: state
        entity_id: group.motion_living
        to: 'off'
      - platform: state
        entity_id: light.lights_downstairs
        to: 'on'
      - platform: state
        entity_id: automation.autolight_gateway_stop
        to: 'on'
        for:
          minutes: 3
    condition:
      condition: template
      value_template: '{{not is_state("binary_sensor.motion_living", "on") }}'
    action:
      - service: light.turn_off
        entity_id: light.gateway_light
      - service: automation.turn_off
        entity_id: automation.autolight_gateway_stop



  ############################################################
  # Motion detection in Living
  ############################################################
  - alias: Autolight - Living
    initial_state: 'on'
    trigger:
      - platform: event
        event_type: xiaomi_aqara.motion
        event_data:
          entity_id: binary_sensor.motion_bar
      - platform: event
        event_type: xiaomi_aqara.motion
        event_data:
          entity_id: binary_sensor.motion_living
      - platform: state
        entity_id: sensor.door_front
        to: 'open'
      - platform: state
        entity_id: sensor.door_front
        to: 'unlocked'
    condition:
      - condition: state
        state: 'off'
        entity_id: input_boolean.block_autolight_living
      - condition: state
        state: 'off'
        entity_id: automation.autolight_gateway
      - condition: state
        state: 'off'
        entity_id: light.lights_downstairs
        for:
          seconds: 10
      - condition: or
        conditions:
        - condition: numeric_state
          below: '200'
          entity_id: sensor.illumination_gateway
        - condition: state
          state: 'below_horizon'
          entity_id: sun.sun
    action:
    - service: light.turn_on
      entity_id: light.light_living
    - service: automation.turn_on
      entity_id: automation.autolight_living_stop
      

  - alias: Autolight - Living Stop
    # initial_state: 'off'
    trigger:
      - platform: state
        entity_id: group.motion_living
        to: 'off'
      - platform: state
        entity_id: automation.autolight_living_stop
        to: 'on'
        for:
          minutes: 3
    condition:
      condition: template
      value_template: '{{not is_state("binary_sensor.motion_living", "on") }}'
    action:
      service: light.turn_off
      entity_id: light.light_living

  - alias: Autolight - Living Stop - Housekeeping
    # initial_state: 'off'
    trigger:
      - platform: state
        entity_id: light.light_kitchen
        to: 'on'
      - platform: state
        entity_id: light.light_bar
        to: 'on'
      - platform: state
        entity_id: light.light_living
        to: 'off'
    action:
      - service: automation.turn_off
        entity_id: automation.autolight_living_stop
      - service: input_boolean.turn_off
        entity_id: input_boolean.block_autolight_living

  - alias: Autolight - Living Keep On after 150s
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: automation.autolight_living_stop
        from: 'off'
        to: 'on'
        for:
          seconds: 150
    condition:
      condition: state
      state: 'home'
      entity_id: group.presence
    action:
      service: automation.turn_off
      entity_id: automation.autolight_living_stop

  - alias: Autolight - Turn off block_autolight_living
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: light.light_kitchen
      - platform: state
        entity_id: light.light_bar
      - platform: state
        entity_id: light.light_living
      - platform: state
        entity_id: input_boolean.block_autolight_living
        from: 'off'
        to: 'on'
        for:
          hours: 3
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.block_autolight_living


  ############################################################
  # Motion detection in garage
  ############################################################
  - alias: Autolight - Garage
    initial_state: 'on'
    trigger:
    - platform: event
      event_type: xiaomi_aqara.motion
      event_data:
        entity_id: binary_sensor.motion_garage
    - platform: state
      entity_id: binary_sensor.opening_door_garage, binary_sensor.opening_door_2garage
      to: 'on'
    condition:
      - condition: state
        state: 'off'
        entity_id: light.light_garage
        for:
          seconds: 10
      - condition: and
        conditions:
        - condition: numeric_state
          below: '1'
          entity_id: sensor.illumination_garage
        - condition: numeric_state
          below: '100'
          entity_id: sensor.illumination_laundry
    action:
      - entity_id: light.light_garage
        service: light.turn_on
      - entity_id: automation.autolight_garage_stop
        service: automation.turn_on

  - alias: Autolight - Garage Stop
    # initial_state: 'off'
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_garage
        to: 'off'
        for:
          minutes: 1
      - platform: state
        entity_id: binary_sensor.motion_laundry
        to: 'off'
        for:
          minutes: 1
      - platform: state
        entity_id: binary_sensor.opening_door_garage
        to: 'off'
        for:
          minutes: 1
      - platform: state
        entity_id: binary_sensor.opening_door_2garage
        to: 'off'
        for:
          minutes: 1
      - platform: state
        entity_id: automation.autolight_garage_stop
        to: 'on'
        for:
          minutes: 3
    condition:
      - condition: template
        value_template: '{{not is_state("binary_sensor.motion_garage", "on") }}'
      - condition: template
        value_template: '{{not is_state("binary_sensor.motion_laundry", "on") }}'
    action:
      - service: light.turn_off
        entity_id: light.light_garage
      - service: light.turn_off
        entity_id: light.light_laundry
      

  - alias: Autolight - Garage Stop - Housekeeping
    # initial_state: 'off'
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_garage
        to: 'on'
        for:
          minutes: 3
      - platform: state
        entity_id: binary_sensor.motion_laundry
        to: 'off'
        for:
          minutes: 3
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.switch_light_garage
      - platform: state
        entity_id: light.light_garage
        to: 'off'
      - platform: state
        entity_id: light.light_laundry
        to: 'off'
    action:
      - service: automation.turn_off
        entity_id: automation.autolight_garage_stop


  ############################################################
  # Stop light if no motion for 10mn
  ############################################################
  - alias: Lights monitoring - Garage
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_garage
        from: 'on'
        to: 'off'
        for:
          minutes: 15
    condition:
      - condition: state
        entity_id: light.light_garage
        state: 'on'
    action:
      - service: light.turn_off
        entity_id: light.light_garage



  ############################################################
  # Motion detection in Laundry
  ############################################################
  - alias: Autolight - Laundry
    initial_state: 'on'
    trigger:
      - platform: event
        event_type: xiaomi_aqara.motion
        event_data:
          entity_id: binary_sensor.motion_laundry
      - platform: state
        entity_id: sensor.door_laundry
        to: 'open'
      - platform: state
        entity_id: sensor.door_laundry
        to: 'unlocked'
    condition:
      - condition: state
        state: 'off'
        entity_id: light.light_laundry
        for:
          seconds: 10
      - condition: or
        conditions:
        - condition: numeric_state
          below: '50'
          entity_id: sensor.illumination_laundry
        - condition: state
          state: 'below_horizon'
          entity_id: sun.sun
    action:
      - service: light.turn_on
        entity_id: light.light_laundry
      - entity_id: automation.autolight_garage_stop
        service: automation.turn_on


  ############################################################
  # Stop light if no motion for 10mn
  ############################################################
  - alias: Lights monitoring - Laundry
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: binary_sensor.motion_laundry
      from: 'on'
      to: 'off'
      for:
        minutes: 10
    condition:
      condition: state
      entity_id: light.light_laundry
      state: 'on'
    action:
      - service: light.turn_off
        entity_id: light.light_laundry



  ############################################################
  # Motion detection in stairs
  ############################################################
  - alias: Autolight - Stairs
    initial_state: 'on'
    trigger:
      platform: event
      event_type: xiaomi_aqara.motion
      event_data:
        entity_id: binary_sensor.motion_stairs
    condition:
      - condition: state
        entity_id: light.bedroom_light
        state: 'off'
      - condition: state
        entity_id: light.light_lou_ceiling
        state: 'off'
      - condition: state
        entity_id: light.lights_downstairs
        state: 'off'
      - condition: state
        state: 'off'
        entity_id: light.light_stairs
        for:
          seconds: 10
      - condition: or
        conditions:
        - condition: and
          conditions:
          - condition: numeric_state
            below: '1'
            entity_id: sensor.illumination_stairs
          - condition: numeric_state
            below: '300'
            entity_id: sensor.illumination_gateway
        - condition: state
          state: 'below_horizon'
          entity_id: sun.sun
    action:
      - entity_id: light.light_stairs
        service: light.turn_on
      - entity_id: automation.autolight_stairs_stop
        service: automation.turn_on

  - alias: Autolight - Stairs Stop
    # initial_state: 'off'
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_stairs
        to: 'off'
      - platform: state
        entity_id: automation.autolight_stairs_stop
        to: 'on'
        for:
          minutes: 3
    condition:
      condition: template
      value_template: '{{not is_state("binary_sensor.motion_stairs", "on") }}'
    action:
      - service: light.turn_off
        entity_id: light.light_stairs

  - alias: Autolight - Stairs Stop - Housekeeping
    # initial_state: 'off'
    trigger:
      - platform: state
        entity_id: light.light_stairs
        to: 'off'
    action:
      - service: automation.turn_off
        entity_id: automation.autolight_stairs_stop



  ############################################################
  # Motion detection in trees
  ############################################################
  - alias: Autolight - Trees
    initial_state: 'on'
    trigger:
      - platform: event
        event_type: xiaomi_aqara.motion
        event_data:
          entity_id: binary_sensor.motion_outside_porch
      - platform: state
        entity_id:  group.openings
        to: 'on'
      - platform: state
        entity_id:
          - device_tracker.corinnes_iphone
          - device_tracker.jerome_s_iphone
        to: 'home'
        for:
          minutes: 1
    condition:
      - condition: state
        state: 'off'
        entity_id: light.lights_trees
        for:
          seconds: 10
      - condition: state
        state: 'off'
        entity_id: light.light_porch
        for:
          seconds: 10
      - condition: or
        conditions:
        - condition: numeric_state
          below: '2'
          entity_id: sensor.illumination_outside_north
        # - condition: sun
        #   after: sunset
        #   after_offset: "00:15:00"
        - condition: state
          state: 'below_horizon'
          entity_id: sun.sun
    action:
      - service: light.turn_on
        entity_id:
          - light.lights_trees
          - light.light_porch
      - entity_id: automation.autolight_trees_stop
        service: automation.turn_on


  - alias: Autolight - Trees Stop
    # initial_state: 'off'
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_outside_porch
        to: 'off'
        from: 'on'
      - platform: state
        entity_id:
          - device_tracker.corinnes_iphone
          - device_tracker.jerome_s_iphone
        to: 'not_home'
      - platform: state
        entity_id:  group.openings
        to: 'off'
        for:
          seconds: 20
      - platform: state
        entity_id: automation.autolight_trees_stop
        to: 'on'
        for:
          minutes: 3
    condition:
      condition: template
      value_template: '{{not is_state("binary_sensor.motion_outside_porch", "on") }}'
    action:
      - service: light.turn_off
        entity_id:
          - light.lights_trees
          - light.light_porch
      # - condition: state
      #   state: 'not_home'
      #   entity_id: group.presence
      # - entity_id: light.lights_trees
      #   service: light.light_living

  - alias: Autolight - Trees Stop - Housekeeping
    # initial_state: 'off'
    trigger:
      - platform: state
        entity_id:
          - light.lights_trees
          - light.light_porch  
        to: 'off'
    action:
      - service: automation.turn_off
        entity_id: automation.autolight_trees_stop


  ############################################################
  # Housekeeping lights downstairs
  ############################################################
  - alias: Lights monitoring - lights still on
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_home
        from: 'on'
        to: 'off'
        for:
          minutes: 120
      - platform: state
        entity_id: group.presence
        from: 'home'
        to: 'not_home'
        for:
          minutes: 20
    condition:
      condition: state
      entity_id: light.lights_all
      state: 'on'
    action:
      - service: light.turn_off
        entity_id: light.lights_all
      - service: persistent_notification.create
        data:
          message: "C'est pas Versailles ici !!"



  ############################################################
  # Start housekeeping of autolight "auto stop"
  ############################################################

  - alias: Autolight - Monitor
    initial_state: 'on'
    trigger:
      platform: state
      # entity_id: automation.autolight_living_stop
      entity_id:
        - automation.autolight_living_stop
        - automation.autolight_garage_stop
        # - automation.autolight_laundry_stop
        - automation.autolight_stairs_stop
        - automation.autolight_trees_stop
    action:
      service_template: >
        {% if trigger.to_state.state == 'on' %}
          automation.turn_on
        {% else %}
          automation.turn_off
        {% endif %}
      data_template:
        entity_id: '{{ trigger.entity_id ~ "_housekeeping" }}'
